{"version":3,"sources":["components/images/girl.png","Projects/Game/images/rock.jpg","Projects/Game/images/paper.jpg","Projects/Game/images/scissors.jpg","components/Home.js","components/AboutPage/About.js","components/TaskButton/TaskButton.js","Projects/ShoppingList/Task.js","Projects/ShoppingList/ShoppingList.js","Projects/BooksData/Task.js","Projects/BooksData/BooksData.js","Projects/StopWatch/Task.js","Projects/StopWatch/StopWatch.js","Projects/CountriesList/Task.js","Projects/CountriesList/CountriesList.js","Projects/Game/getWinner.js","Projects/Game/constants.js","Projects/Game/PlayerChoice.js","Projects/Game/Task.js","Projects/Game/Game.js","Projects/CarList/data/index.js","Projects/CarList/Form/Form.js","Projects/CarList/Task.js","Projects/CarList/CarList.js","Projects/UsersList/Profile/Task.js","Projects/UsersList/Profile/Profile.js","Projects/UsersList/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","console","log","src","girlImage","alt","style","width","About","className","TaskButton","state","taskIsVisible","handleTaskClick","bind","this","setState","onClick","children","Component","Task","App","product","shoppingList","productsHandler","addItem","e","target","value","i","filter","item","index","preventDefault","allProducts","push","key","deleteHandler","length","onSubmit","type","onChange","placeholder","BooksData","isLoading","bookName","bookQuery","inputHandler","submitHandler","getBooks","setTimeout","axios","get","then","response","books","data","items","map","id","thumbnail","volumeInfo","imageLinks","smallThumbnail","title","description","categories","link","previewLink","error","book","href","reduce","acc","StopWatch","startHandler","interval","setInterval","setTime","status","resetHandler","clearInterval","seconds","pauseHandler","min","Math","floor","sec","disabled","CountriesList","countries","countryName","countryQuery","getCountries","name","capital","region","catch","country","playerResult","compResult","PlayerChoice","image","margin","getComputerChoice","max","choice","random","Play","playerScore","compScore","rockHandler","paperHandler","scissorsHandler","handleClickReset","winner","getWinner","playRound","prevProps","prevState","alert","rockImage","paperImage","scissorsImage","carlist","brand","make","year","imageUrl","price","new","defaultCar","Form","handleChange","handleSubmit","checked","selected","hidden","required","CarList","car","uuid","Profile","personsList","results","gender","firstName","first","lastName","last","location","city","street","buildingNumber","number","email","picture","medium","flag","nat","toLowerCase","icon","faMale","size","faFemale","LoginPage","username","password","userView","handlePassChange","handleUserChange","dismissError","evt","data-test","currentView","faCode","to","path","component","exact","ShoppingList","Countries","Game","UsersList","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6840b9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/girl.f15fef79.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.0a6de424.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paper.853f5414.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scissors.c8b0c761.jpg\";","import React from 'react'\nimport girlImage from './images/girl.png'\n\nfunction Home(props) {\n\tconsole.log('props', props)\n\treturn (\n\t\t<div>\n\t\t\t<img src={girlImage} alt=\"girl\" style={{width:300}}/>\n\t\t</div>\n\t)\n\n}\nexport default Home","import React from 'react'\nimport './About.css'\n\nfunction About() {\n\treturn (\n\t\t<div className=\"About\">\n\t\t\t<h2>Hey! I've finished the React and Modern JavaScript course in British Columbia Institute of Technology.Here you can look at some projects and exercises I did during this course.</h2>\n\t\t</div>\n\t)\n}\nexport default About","import React, {Component} from 'react'\n\nclass TaskButton extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttaskIsVisible: false\n\t\t}\n\t\tthis.handleTaskClick = this.handleTaskClick.bind(this)\n\t}\n\thandleTaskClick() {\n\t\tconst   { taskIsVisible }   = this.state\n\t\tthis.setState({\n\t\t\ttaskIsVisible: !taskIsVisible\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick={this.handleTaskClick}\n\t\t  \t\t\t\tclassName=\"TaskButton\">\n\t\t\t\t\t{this.state.taskIsVisible ? \"Close\" : \"Open\"} the Task\n\t\t\t\t</button>\n\t\t\t\t<br/>\n\t\t\t\t{this.state.taskIsVisible && (\n\t\t\t\t\t<div className=\"TaskData\">\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</div>\n\t\t\t\t)}\t\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default TaskButton","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Create a new application called shopping-list.</li>\n\t\t\t<li>Make an input, where you can enter a product by clicking ‘enter’ and create ‘add product’ button</li>\n\t\t\t<li>You should be able  to add products in an ordered list</li>\n\t\t\t<li>Next to each product make a ‘delete’ button</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, { Component } from 'react'\nimport './ShoppingList.css'\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        product: '',\n\t\tshoppingList: [],\n      }\n      \n      this.productsHandler = this.productsHandler.bind(this)\n\t  this.addItem = this.addItem.bind(this)\n    }\n\n    productsHandler(e) {\n        this.setState({\n            product: e.target.value\n        })\n    }\n\n    deleteHandler(i) {\n        const shoppingList = this.state.shoppingList.filter((item, index) => index !== i)\n        this.setState({\n            shoppingList: shoppingList,\n        })\n    }\n\n    addItem(e) {\n        if (this.state.product !== '') {\n            this.setState({\n                product: '',\n                shoppingList: [this.state.product, ...this.state.shoppingList],\n            })\n        }\n        e.preventDefault();       \n\t}\n\n  render() {\n    const { shoppingList } = this.state;\n    const allProducts = [];\n    for (let i = 0; i < shoppingList.length; i++) {\n        allProducts.push(\n            <li key={shoppingList[i] + i}>\n                {shoppingList[i]}\n\t\t\t\t&nbsp;\n                <button className=\"regular-button\" onClick={() => this.deleteHandler(i)}>Delete</button>\n            </li>\n        )\n    }\n    return (\n\t\t<div className=\"App ShoppingList\">\n\t\t\t<TaskButton>\n\t\t\t\t<Task />\n\t\t\t</TaskButton>\n\t\t\t<form onSubmit={this.addItem}>\n\t\t\t\t<h2>Shopping list:</h2>\n\t\t\t\t<input type='text'\n\t\t\t\t\t\tvalue={this.state.product}\n\t\t\t\t\t\tonChange={this.productsHandler}\n\t\t\t\t\t\tplaceholder=\"Enter the product\"/>\n\t\t\t\t<input className=\"regular-button\" type='submit' value='Add'/>\n\t\t\t\t<ol>{allProducts}</ol> \n        \t</form>\n\t\t</div>\n        \n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Create a book search app using API: \"https://www.googleapis.com/books/v1/volumes?q=\"</li>\n\t\t\t<li>Access the data using Axios (promise based HTTP client for the browser) </li>\n\t\t\t<li>Create an input, prepopulated with ‘harry potter’ and search button</li>\n\t\t\t<li>Using the API data, display a list of books. Each book should have picture, name of the book (should be a link to this book page), description and category.</li>\n\t\t\t<li>If there is no book found, display a message : Oops! No books found for “nameOfTheBook\" !</li>\n\t\t\t<li>Display “Loading…” message while the data is loading.</li>\n\t\t\t<li>Use some picture for books with if there’s no data for the  picture and ‘unknown’ category if there’s none in the data </li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './BooksData.css'\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nclass BooksData extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      bookName: 'harry potter',\n\t  bookQuery: '',\n    }\n\n    this.inputHandler = this.inputHandler.bind(this)\n    this.submitHandler = this.submitHandler.bind(this)\n\tthis.getBooks = this.getBooks.bind(this)\n  }\n\n  componentDidMount() {\n    setTimeout(this.getBooks, 1000)\n  }\n\n  getBooks() {\n    const bookQuery = this.state.bookName;\n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${bookQuery}`)\n      .then(response => {\n        this.setState({\n          bookQuery,\n          isLoading: false,\n          books: response.data.items && response.data.items.map(item => ({\n            id: item.id,\n            thumbnail: item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.smallThumbnail,\n            title: item.volumeInfo.title,\n            description: item.volumeInfo.description,\n            categories: item.volumeInfo.categories,\n            link: item.volumeInfo.previewLink,        \n          })),\n        })\n      })\n  }\n\n  inputHandler(e) {\n    this.setState({\n      bookName: e.target.value,\n    })\n  }\n\n  submitHandler() {\n    this.setState({ isLoading: true });\n    this.getBooks();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const error = !this.state.books || this.state.books.length === 0;\n\n    return (\n      <div className=\"booksData App\">\n\t\t<TaskButton>\n\t\t\t<Task />\n\t\t</TaskButton>\n        <h2>Find a book :</h2>\n        <input \n          type=\"text\" \n          value={this.state.bookName} \n          onChange={this.inputHandler}\n        />\n        <button onClick={this.submitHandler}\n\t\t\t\tclassName=\"SearchButton\">Search</button>\n        {isLoading && \n          <div>\n            <p>Loading...</p>\n            <p>Please, wait :)</p>\n          </div>\n        }\n        {!isLoading &&\n          <div>\n            <ul className=\"BooksList\">\n              {this.state.books && this.state.books.map(book => (\n                  <li key={book.id}>\n                    <img \n                      src={book.thumbnail ? book.thumbnail : 'https://books.google.ca/googlebooks/images/no_cover_thumb.gif'} \n                      alt={book.title}\n                    />\n                    <br />\n                    <a href={book.link}>{book.title}</a>\n                    <p>{book.description}</p>\n                    <p>Category:\n                      {book.categories ? \n                        book.categories.reduce((acc, item) => (acc + ', ' + item)) :\n                        'Unknown'\n                      }\n                    </p>\n                  </li>\n                )\n              )}\n            </ul>\n            {error && \n              <p>Oops! No books found for \"{this.state.bookQuery}\" !</p>\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default BooksData;\n","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Create a new React application, name it \"stop-watch\".</li>\n\t\t\t<li>Your Stop Watch should render a timer that starts automatically when the View loads.</li>\n\t\t\t<li>The timer should be in the format \"mm:ss\". Eg. 01:15 (1 minute and 15 seconds). Do not worry about times over 1 hour.</li>\n\t\t\t<li>The timer should update the view every second.</li>\n\t\t\t<li>Display a button labeled \"Pause\". This button pauses the timer.</li>\n\t\t\t<li>When paused, button should display \"Start\". Clicking on it restarts the timer.</li>\n\t\t\t<li>Display a button labeled \"Reset\". This button resets the timer to 0 and stops the timer.</li>\n\t\t\t<li>When the timer is 0, the \"Pause\" button should be re-labeled as \"Start\".</li>\n\t\t\t<li>When the timer is 0 and the timer is not running, the Reset button should be disabled. Ensure that the button is also visibly disabled.</li>\n\t\t\t<li>Make sure to test it, to avoid bugs. What happens if the Start button is clicked multiple times? How about if the Stop button is clicked multiple times?</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, { Component } from 'react'\nimport './StopWatch.css'\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nconst STATUS_RESET = 'reset';\nconst STATUS_RUNNING = 'running';\nconst STATUS_PAUSE = 'pause';\n\nclass StopWatch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: 0,\n\t\t\tstatus: STATUS_RUNNING,\n        }\n\t\tthis.setTime = this.setTime.bind(this);\n    }\n    componentDidMount() {\n        this.interval = setInterval(this.setTime, 1000);\n    }\n    setTime() {\n        this.setState({\n            seconds: this.state.seconds + 1,\n        }); \n    }\n    startHandler = () => {\n        this.interval = setInterval(this.setTime, 1000);\n        this.setState({\n            status: STATUS_RUNNING,\n        });\n    }\n    resetHandler = () => {\n        clearInterval(this.interval);\n        this.setState({\n            seconds: 0,\n            status: STATUS_RESET,\n        })\n    }\n    pauseHandler = () => {\n        clearInterval(this.interval);\n        this.setState({\n            status: STATUS_PAUSE,\n        })\n    }\n\n    render() {\n        const min = Math.floor(this.state.seconds / 60);\n        const sec = this.state.seconds - min * 60;\n        return (\n            <div className=\"Timer App\">\n\t\t\t\t<TaskButton>\n\t\t\t\t\t<Task />\n\t\t\t\t</TaskButton>\t\t\n                <h2>Timer:</h2>\n                {min}:{sec}\n                <br />\n                {this.state.status !== STATUS_RUNNING &&\n                    <button className=\"regular-button\" onClick={this.startHandler}>Start</button>\n                }\n                {this.state.status === STATUS_RUNNING &&\n                    <button className=\"regular-button\" onClick={this.pauseHandler}>Pause</button>\n                }\n\t\t\t\t&nbsp;\n                <button \n\t\t\t\t\tdisabled={this.state.status === STATUS_RESET} \n\t\t\t\t\tonClick={this.resetHandler}\n\t\t\t\t\tclassName=\"ResetButton regular-button\"\n                >\n                    Reset\n                </button>\n            </div>\n          );  \n    }\n}\n\nexport default StopWatch;\n\n","\nimport React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Create a new application called countries-list.</li>\n\t\t\t<li>Install your HTTP Request library of choice. I recommend axios.</li>\n\t\t\t<li>To fetch a list of countries in JSON format, make the following request:GET https://restcountries.eu/rest/v2/all</li>\n\t\t\t<li>Display a loading spinner while the request is being made.</li>\n\t\t\t<li>Display the list of countries.</li>\n\t\t\t<li>Each country you list must also display their capital city and continent.</li>\n\t\t\t<li>Using the REST Countries API as reference, add the ability to search for countries in your app. You can use a text input and a button to fire the search.</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, {Component} from 'react'\nimport axios from 'axios'\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nclass CountriesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading:true,\n      countries: [],\n\t  countryName:'belarus',\n\t  countryQuery:''\n\t}\n\t\n    this.getCountries = this.getCountries.bind(this)\n    this.inputHandler = this.inputHandler.bind(this)\n\tthis.submitHandler = this.submitHandler.bind(this)\n  }\n\n  componentDidMount() {\n    setTimeout(this.getCountries, 1000);\n  }\n\n  getCountries() {\n\t  const countryQuery = this.state.countryName;\n       axios.get(`https://restcountries.eu/rest/v2/name/${countryQuery}`)\n      .then((response) => {\n        this.setState({\n\t\t\tcountryQuery,\n            isLoading: false,\n          \tcountries: response.data && response.data.map(item => ({\n            name: item.name,\n            capital: item.capital,\n            region: item.region,\n          }))\n        })\n      })\n      .catch((error) => {\n        this.setState({\n\t\t\terror: true,\n\t\t\tcountryQuery,\n\t\t})\n      })\n  }\n  \n  inputHandler(e) {\n    this.setState({\n      countryName: e.target.value,\n    })\n  }\n\n  submitHandler() {\n\t\n\tif(this.state.error !== '') {\n\t\tthis.setState({\n\t\t\tcountries: [],\n\t\t\terror: ''\n\t\t})\n\t}\n\tthis.getCountries();\n\tthis.setState({\n\t\terror:'',\n\t\tcountries: []\n\t})\n  }\n\n  render() {\n    const { isLoading} = this.state;\n\n    return (\n\t\t<div className=\"App\">\n\t\t\t<TaskButton>\n\t\t\t\t<Task />\n\t\t\t</TaskButton>\n\t\t\t<h2>Enter the country name</h2>\n\t\t\t\n\t\t\t<input type=\"text\" \n\t\t\t\t\tvalue={this.state.countryName}\n\t\t\t\t\tonChange={this.inputHandler}\n\t\t\t\t\tplaceholder = \"name of the country\"\n\t\t\t/>\n\t\t\t&nbsp;\n\t\t\t<button className=\"regular-button\" \n\t\t\t\t\tonClick={this.submitHandler}>\n\t\t\t\tSearch\n\t\t\t</button>\n\t\t\t{isLoading && \n\t\t\t\t<div>\n\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t<p>Please, wait :)</p>\n\t\t\t\t</div>\n       \t\t }\t\t\t\n\t\t\t{this.state.countries.map((country) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={country}>\n\t\t\t\t\t\t<p>Country: {country.name},</p>\n\t\t\t\t\t\t<p>capital: {country.capital},</p>\n\t\t\t\t\t\t<p>continent: {country.region}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t\n\t\t\t{this.state.error && (\n\t\t\t\t<p>Oops! There's no such country as \"{this.state.countryQuery}\"!</p>\n\t\t\t)}\n   \t\t </div>\n  );\n  }\n}\n\nexport default CountriesList\n","import {\n    ROCK,\n    PAPER,\n    SCISSORS,\n    PLAYER,\n    TIE,\n    COMPUTER,\n} from './constants'\n\nexport default function(playerResult, compResult) {\n    if (playerResult === compResult) {\n        return TIE;\n    }\n\n    if (playerResult === ROCK) {\n        if (compResult === PAPER) {\n            return COMPUTER;\n        }\n        return PLAYER;\n    } \n\n    if (playerResult === PAPER) {\n        if (compResult === SCISSORS) {\n            return COMPUTER;\n        }\n        return PLAYER;\n    }\n\n    if (playerResult === SCISSORS) {\n        if(compResult === ROCK) {\n            return COMPUTER;\n        }\n        return PLAYER;\n    }\n}","export const ROCK = 'rock';\nexport const PAPER = 'paper';\nexport const SCISSORS = 'scissors';\n\nexport const TIE = 'tie';\nexport const COMPUTER = 'computer';\nexport const PLAYER = 'player';","import React from 'react';\n\nfunction PlayerChoice(props) {\n  return (\n    <img\n      src={props.image}\n      style={{ width: 200, margin: 10 }}\n\t  onClick={() => props.onClick(props.name)}\n\t  alt={props.name}\n    />\n  );\n}\n\nexport default PlayerChoice;","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Display 3 images, for \"Rock\", \"Paper\" and \"Scissors\".</li>\n\t\t\t<li>Display a score board. Player and Computer start at 0.</li>\n\t\t\t<li>Display a button to reset the game. This should set both players to score 0.</li>\n\t\t\t<li>When clicking on the one of the images, your application should pick one of the 3 choices as well, at random.</li>\n\t\t\t<li>Increment the score by 1 to the winner. Either use an alert or display a message about who won.</li>\n\t\t\t<li>Once one of the players reaches 5 points, display a message about who won.</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, {Component} from 'react';\nimport {\n\tROCK,\n\tPAPER,\n\tSCISSORS,\n\tCOMPUTER,\n\tPLAYER,\n} from './constants'\nimport getWinner from './getWinner'\nimport PlayerChoice from './PlayerChoice';\nimport rockImage from './images/rock.jpg';\nimport paperImage from './images/paper.jpg';\nimport scissorsImage from './images/scissors.jpg';\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nfunction getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\nfunction getComputerChoice() {\n\tconst choice = getRandomInt(3);\n\tif (choice === 0) {\n\t\treturn ROCK\n\t}\n\tif(choice === 1) {\n\t\treturn PAPER\n\t}\n\treturn SCISSORS\n}\n\nclass Play extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tplayerScore: 0,\n\t\t\tcompScore: 0,\n\t\t}\n\t\tthis.rockHandler = this.rockHandler.bind(this)\n\t\tthis.paperHandler = this.paperHandler.bind(this)\n\t\tthis.scissorsHandler = this.scissorsHandler.bind(this)\n\t\tthis.handleClickReset = this.handleClickReset.bind(this)\n\t}\n\n\tplayRound(playerResult) {\n\t\tconst compResult = getComputerChoice();\n\t\tconst winner = getWinner(playerResult, compResult)\n\t\tlet playerScore = this.state.playerScore;\n\t\tlet compScore = this.state.compScore;\n\t\tif (winner === COMPUTER) {\n\t\t\tcompScore++;\n\t\t} else if (winner === PLAYER) {\n\t\t\tplayerScore++;\n\t\t}\n\t\tthis.setState({\n\t\t\tplayerResult,\n\t\t\tcompResult,\n\t\t\tplayerScore,\n\t\t\tcompScore,\n\t\t}); \n\t}\n\n\trockHandler() {\n\t\tthis.playRound(ROCK);\n\t}\n\n\tpaperHandler() {\n\t\tthis.playRound(PAPER);\n\t}\n\n\tscissorsHandler() {\n\t\tthis.playRound(SCISSORS);\n\t}\n\n\thandleClickReset() {\n\t\tthis.setState({ \n\t\t\tplayerScore: 0, \n\t\t\tcompScore: 0 \n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.playerScore === 5) {\n\t\t  alert('PLAYER WINS!');\n\t\t} else if (this.state.compScore === 5) {\n\t\t  alert('COMPUTER WINS!');\n\t\t}\n\t}\n\n\trender() {\n\t\tlet winner = getWinner(this.state.playerResult, this.state.compResult)\n\t\treturn ( \n\t\t\t<div className=\"App\">\n\t\t\t\t<TaskButton>\n\t\t\t\t\t<Task />\n\t\t\t\t</TaskButton>\n\t\t\t\t<h2>Rock Paper Scissors game</h2>\n\t\t\t\t<h3>Choose the image by clicking on the picture</h3>\n\t\t\t\t\n\t\t\t\t<PlayerChoice\n\t\t\t\t\tname=\"rock\"\n\t\t\t\t\timage={rockImage}\n\t\t\t\t\tonClick={this.rockHandler}\n\t\t\t\t/>\n\t\t\t\t<PlayerChoice\n\t\t\t\t\tname=\"paper\"\n\t\t\t\t\timage={paperImage}\n\t\t\t\t\tonClick={this.paperHandler}\n\t\t\t\t/>\n\t\t\t\t<PlayerChoice\n\t\t\t\t\tname=\"scissors\"\n\t\t\t\t\timage={scissorsImage}\n\t\t\t\t\tonClick={this.scissorsHandler}\n\t\t\t\t/>\n\t\t\t\t{this.state.playerResult &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Player Choice: {this.state.playerResult}</p>\n\t\t\t\t\t\t<p>Computer Choice: {this.state.compResult}</p>\n\t\t\t\t\t\t<p>Winner: {winner}</p>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t<h3>Scoore:</h3>\n\t\t\t\t<p>Player: {this.state.playerScore}</p>\n\t\t\t\t<p>Computer: {this.state.compScore}</p>\n\t\t\t\t<button className=\"regular-button\" onClick={this.handleClickReset}>Reset</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Play;","// import carlist2 from './carlist'\n// export const carlist = carlist2;\n\nexport const carlist = [\n  {\n    id: '1',\n    brand: 'Toyota',\n    make: 'Corolla',\n    year: 2015,\n    imageUrl: 'http://s3.caradvice.com.au/thumb/1000/562/wp-content/uploads/2015/06/2015-toyota-corolla-zr-4.jpg',\n    price: 19200,\n    new: false\n  },\n  {\n    id: '2',\n    brand: 'Honda',\n    make: 'Civic',\n    year: 2016,\n    imageUrl: 'https://cars.usnews.com/static/images/Auto/izmo/i2314304/2016_honda_civic_angularrear.jpg',\n    price: 21600,\n    new: false\n  },\n  {\n    id: '3',\n    brand: 'Ford',\n    make: 'Mustang',\n    year: 2008,\n    imageUrl: 'https://s.aolcdn.com/dims-global/dims3/GLOB/legacy_thumbnail/788x525/quality/85/https://s.aolcdn.com/commerce/autodata/images/CAB80FOC051B0101.jpg',\n    price: 13600,\n    new: true\n  },\n  {\n    id: '4',\n    brand: 'Mercedes Benz',\n    make: 'C-Class C43',\n    year: 2017,\n    imageUrl: 'https://61571e67bd8f1f6acb1a-642f5177af5aebf9ccc5072ad2e9ac32.ssl.cf1.rackcdn.com/WDDWJ6EB0HF469169/b101c9f787e7c70c0803a02b2210783a.jpg',\n    price: 68000,\n    new: true\n  },\n]\n\nexport const defaultCar = {\n\tbrand: 'BMW',\n\tmake: 'X3',\n\tyear: '2018',\n\timageUrl: 'https://images.pexels.com/photos/170811/pexels-photo-170811.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n\tprice: '30000',\n\tnew: 'false',\n}\n","import React, {Component} from 'react';\nimport './Form.css';\nimport { defaultCar } from '../data'\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n\t\tthis.state = defaultCar;\n\t\t\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value, checked, type } = e.target;\n        this.setState(state => ({ \n            [name]: type === 'checkbox' ? checked : value,\n        }));\n      }\n      \n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.onSubmit(this.state);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n\t\t\t  \t<h4>Add a new car:</h4>  \n\t\t\t   \t<label>Brand:</label>\n\t\t\t\t<input type=\"text\" name=\"brand\" value={this.state.brand} onChange={this.handleChange}/>\n\t\t\t   \t<label>Name:</label>\n\t\t\t\t<input type=\"text\" name=\"make\" value={this.state.make} onChange={this.handleChange}/>\n\t\t\t   \t<label>Year:</label>\n\t\t\t\t<select name=\"year\" value={this.state.year} onChange={this.handleChange} >\n\t\t\t\t\t<option value=\"\" selected disabled hidden>Choose</option>\n\t\t\t\t\t<option value=\"2020\">2020</option>\n\t\t\t\t\t<option value=\"2019\">2019</option>\n\t\t\t\t\t<option value=\"2018\">2018</option>\n\t\t\t\t\t<option value=\"2017\">2017</option>\n\t\t\t\t\t<option value=\"2016\">2016</option>\n\t\t\t\t\t<option value=\"2015\">2015</option>\n\t\t\t\t</select>\n\t\t\t   <br/>\n\t\t\t   <label>Photo URL:</label>\t\n\t\t\t\t<input type=\"url\" \n\t\t\t\t\tname=\"imageUrl\" \n\t\t\t\t\tvalue={this.state.imageUrl} \n\t\t\t\t\tonChange={this.handleChange}  \n\t\t\t\t\tplaceholder=\"https://example.com\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t   <label>Price:</label>\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    value={this.state.price} \n                    onChange={this.handleChange}\n                />\n\t\t\t   <br/>\n\t\t\t   <label>New car:</label>\n\t\t\t\t<input type=\"checkbox\" name=\"new\" value={this.state.new} onChange={this.handleChange}/>\n\t\t\t   <br/>\n\t\t\t   <input className=\"regular-button\" type=\"submit\" value=\"submit\"></input>\n\t\t   </form>\n        )\n    }\n}\nexport default Form;","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Use the given data to display a list of cars for sale.</li>\n\t\t\t<li>Create a Component for \"CarList\". It must accept props for it's data.</li>\n\t\t\t<li>Render each item in the list. Do not forget to set a \"key\" on each item</li>\n\t\t\t<li>Create a form that will allow users to add new items to the car list.</li>\n\t\t\t<li>Form must include all properties of car items specified. Use data types that fit the data.( brand, make, year, image url, prise, new/old)</li>\n\t\t\t<li>When a new item is added, it should be displayed at the end of the full car list.</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, { Component } from 'react'\nimport uuid from 'uuid/v4'\nimport './CarList.css'\nimport Form from './Form/Form'\nimport { carlist } from './data'\nimport TaskButton from '../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nclass CarList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n\t\tcarlist,\n\t }\n    \n\tthis.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit(car) {\n    car.id = uuid();\n    this.setState({\n      carlist: [...this.state.carlist, car],\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\t\t<TaskButton>\n\t\t\t<Task />\n\t\t</TaskButton>\n\t\t<h2>Cars for sale</h2>\n\t\t<Form onSubmit={this.handleSubmit}/>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Brand:</th>\n\t\t\t\t\t\t<th>Name:</th>\n\t\t\t\t\t\t<th>Year:</th>\n\t\t\t\t\t\t<th>Photo:</th>\n\t\t\t\t\t\t<th>Prise:</th>\n\t\t\t\t\t\t<th>Condition:</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{this.state.carlist.map(item => (\n\t\t\t\t\t<tr key={item.id}> \n\t\t\t\t\t\t<td>{item.brand}</td>\n\t\t\t\t\t\t<td>{item.make}</td>\n\t\t\t\t\t\t<td>{item.year}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<img src={item.imageUrl} style={{width:200}} alt={item.brand}/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{item.price}$</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{item.new ? 'New' : 'Used'} \n\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n      </div>\n    );\n  }\n}\n\nexport default CarList;\n\n\n","import React from 'react'\n\nfunction Task() {\n\treturn (\n\t\t<ul>\n\t\t\t<li>Create a Login View and a Users View component.</li>\n\t\t\t<li>On the Login View, display a \"Login\" button with username and passwors inputs</li>\n\t\t\t<li>Clicking on the \"login\" button should hide the Login View and display the Users View.</li>\n\t\t\t<li>Render all items in the Array in the Users View. The data represents test users. Data available at randomuser.me</li>\n\t\t\t<li>Ensure that you create a \"Profile\" component - don't render everything in one giant component.</li>\n\t\t\t<li>Display different icons for male/female users.</li>\n\t\t\t<li>Display flags  depending on that country the user is from. You can use the \"nat\" property of the user object to determine this.</li>\n\t\t\t<li>Display non-sensitive data in your Profile component, such as name, username, image, address, etc.</li>\n\t\t\t<li>Create \"delete\" button for each user in the list.</li>\n\t\t</ul>\n\t\n\t)\n}\nexport default Task","import React, {Component} from 'react';\nimport './Profile.css';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMale, faFemale } from '@fortawesome/free-solid-svg-icons'\nimport TaskButton from '../../../components/TaskButton/TaskButton'\nimport Task from './Task'\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\tpersonsList: [],\n\t}\n\tthis.deleteHandler = this.deleteHandler.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get('https://randomuser.me/api/?results=20')\n\t\t.then (response => {\n            if (!response.data.results) {\n                this.setState({ personsList: [] })\n                return;\n            }\n            this.setState({ \n                personsList: response.data.results.map(item => ({\n                    gender: item.gender,\n                    title: item.name.title, \n                    firstName: item.name.first,\n                    lastName: item.name.last,\n                    country:item.location.country,\n                    city: item.location.city,\n                    street: item.location.street.name,\n                    buildingNumber: item.location.street.number,\n                    email: item.email,\n                    picture: item.picture.medium,\n                    flag: item.nat.toLowerCase(),\n                }))\n            })\n        })\n    }\n\tdeleteHandler(index) {\n\t\tconst personsList = this.state.personsList.filter((item, i) => i !== index)\n\t\tthis.setState({\n\t\t\tpersonsList: personsList\n\t\t})\n\t}\n\n  \trender() {\n      return (\n        <div className=\"App\">\n\t\t\t<TaskButton>\n\t\t\t\t<Task />\n\t\t\t</TaskButton>\n            <h1>List of users</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Photo</th>\n                        <th>Name</th>\n                        <th>Gender</th>\n                        <th>Flag</th>\n                        <th>Adress</th>\n                        <th>Email</th>\n                        <th>Delete user</th>     \n                    </tr>\n                </thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{this.state.personsList.map((item, index) => (\n\t\t\t\t\t\t<tr key={item.firstName + item.lastName }>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<img src={item.picture} alt={item.firstName} style={{width:100}}/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{item.title}. {item.firstName} {item.lastName}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{item.gender === \"male\" ? <FontAwesomeIcon icon={faMale} size=\"lg\"/> : <FontAwesomeIcon icon={faFemale} size=\"lg\"/>}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<img src={`https://www.countryflags.io/${item.flag}/flat/64.png`} alt={item.country}/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{item.country}, {item.city}, {item.buildingNumber}-{item.street} </td>\n\t\t\t\t\t\t\t<td>{item.email}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<button className=\"regular-button\" onClick={()=> this.deleteHandler(index)}>delete</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n                \t))}\n\t\t\t\t</tbody>\n            </table>\n        </div>\n        );\n    }\n}\n\nexport default Profile;\n\n//install react fontawersome\n//$ npm i --save @fortawesome/fontawesome-svg-core  @fortawesome/free-solid-svg-icons @fortawesome/react-fontawesome","import React, { Component } from 'react';\nimport './App.css';\nimport Profile from './Profile/Profile'\n\nclass LoginPage extends Component {\n  constructor(props) {\n\tsuper(props);\n\t\n    this.state = {\n      username: '',\n      password: '',\n\t  error: '',\n\t  userView: false\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: '' });\n  }\n\n  handleSubmit(evt) {\n\tevt.preventDefault();\n\t\n    if (!this.state.username) {\n      return this.setState({ error: 'Username is required' });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: 'Password is required' });\n    }\n\tif(this.state.username && this.state.password) {\n\t\treturn this.setState({ userView: true })\n\t}\n\treturn this.setState({ error: '' });\n\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value,\n    });\n  };\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value,\n    });\n  }\n\n  render() {\n \n    return (\n      <div className=\"Login\">\n\t\t  \n\t\t  {this.state.userView ? <Profile /> : (\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t{this.state.error && \n\t\t\t\t\t\t\t<h3 data-test=\"error\" \n\t\t\t\t\t\t\t\tonClick={this.dismissError}>\n\t\t\t\t\t\t\t\t<button onClick={this.dismissError}>✖</button>\n\t\t\t\t\t\t\t\t{this.state.error}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t}\n\t\t\t\t\t<h2>Please print your name and any password to Log In!</h2>\n\t\t\t\t\t<label>User Name</label>\n\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\tdata-test=\"username\" \n\t\t\t\t\t\t\tvalue={this.state.username} \n\t\t\t\t\t\t\tonChange={this.handleUserChange}\n\t\t\t\t\t\t\tplaceholder=\"Enter any name\" />\n\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input type=\"password\" \n\t\t\t\t\t\t\tdata-test=\"password\" \n\t\t\t\t\t\t\tvalue={this.state.password} \n\t\t\t\t\t\t\tonChange={this.handlePassChange} \n\t\t\t\t\t\t\tplaceholder=\"Enter any password\"/>\n\n\t\t\t\t\t<input type=\"submit\" \n\t\t\t\t\t\t\tclassName=\"regular-button\"\n\t\t\t\t\t\t\tvalue=\"Log In\" \n\t\t\t\t\t\t\tdata-test=\"submit\" />\n\t\t\t\t</form>\n\t\t  )}\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import React, { Component } from 'react'\nimport './App.css'\nimport Home from './components/Home'\nimport About from './components/AboutPage/About'\nimport ShoppingList from './Projects/ShoppingList/ShoppingList'\nimport BooksData from './Projects/BooksData/BooksData'\nimport StopWatch from './Projects/StopWatch/StopWatch'\nimport Countries from './Projects/CountriesList/CountriesList';\nimport Game from './Projects/Game/Game'\nimport CarList from './Projects/CarList/CarList'\nimport UsersList from './Projects/UsersList/Login'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcurrentView: 'home'\n\t\t}\n\t}\n\n\thandleTaskClick() {\n\t\tconst { taskIsVisible } = this.state\n\t\tthis.setState({\n\t\t\ttaskIsVisible: !taskIsVisible\n\t\t})\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"AppMain\">\n\t\t\t\t\t<nav className=\"Navbar\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCode} size=\"lg\"/> \n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<h1>BCIT React Projects and Exercises</h1>\n\n\t\t\t\t\t<div className=\"allButtons\">\n\t\t\t\t\t\t<h3>Projects:</h3>\n\t\t\t\t\t\t<div className=\"projectButtons\">\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/game\">Game</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/books\">Library</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"exerciseButtons\">\n\t\t\t\t\t\t\t<h3>Exercises:</h3>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/cars\">Cars</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/users\">Users</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/shoppinglist\">Shopping List</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/stopwatch\">Timer</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"projectButton\">\n\t\t\t\t\t\t\t\t<Link to=\"/countries\">Countries</Link>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" component={Home} exact/>\n\t\t\t\t\t\t<Route path=\"/about\" component={About}/>\n\t\t\t\t\t\t<Route path=\"/shoppinglist\" component={ShoppingList}/>\n\t\t\t\t\t\t<Route path=\"/books\" component={BooksData}/>\n\t\t\t\t\t\t<Route path=\"/stopwatch\" component={StopWatch}/>\n\t\t\t\t\t\t<Route path=\"/countries\" component={Countries}/>\n\t\t\t\t\t\t<Route path=\"/cars\" component={CarList}/>\n\t\t\t\t\t\t<Route path=\"/game\" component={Game}/>\n\t\t\t\t\t\t<Route path=\"/users\" component={UsersList}/>\n\t\t\t\t\t\t<Route>\n\t\t\t\t\t\t\t404 Not Found\n\t\t\t\t\t\t</Route>  \n\t\t\t\t\t</Switch> \n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t)\n\t}\t\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}