{"version":3,"sources":["images/globe.jpg","cookieService.js","Image.js","Articles.js","CurrentYear.js","Footer.js","Home.js","About.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CookieServise","cookieType","cookieValue","d","Date","setTime","getTime","numDays","expires","toUTCString","document","cookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","imageStyle","width","height","Image","props","react_default","a","createElement","style","className","src","url","alt","title","Articles","articles","map","article","key","src_Image","urlToImage","publishedAt","description","href","CurrentYear","getFullYear","React","Component","Footer","src_CurrentYear","API_KEY","BASE_URL","cookieService","CookieService","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","apiKey","newsTopic","loading","getNews","bind","assertThisInitialized","handleQuery","handleSubmit","lastQuery","getCookie","setCookie","e","setState","target","value","_this2","URL","fetch","then","response","json","data","catch","error","console","log","logo","type","placeholder","onChange","onClick","src_Articles","src_Footer","About","NotFound","react_router_dom","to","react_router","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51056a13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/globe.0691cf6e.jpg\";","class CookieServise {\n\n       // ** This function does not need to be changed. **\n    // Set cookie that expires 1000 days from now.\n    // This can store the user's prefered news category.\n    setCookie(cookieType, cookieValue) {\n        var numDays = 1000;\n        var d = new Date();\n        d.setTime(d.getTime() + (numDays*24*60*60*1000));\n        var expires = \"expires=\"+ d.toUTCString();\n        document.cookie = cookieType + \"=\" + cookieValue \n                        + \";\" + expires + \";path=/\";\n    }\n\n    // ** This function does not need to be changed. **\n    // Get category from cookie if one exists.\n    getCookie(cookieType) {\n        var name = cookieType + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n          var c = ca[i];\n          while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n          }\n          if (c.indexOf(name) === 0) {\n            // Cookie found.\n            return c.substring(name.length, c.length);\n          }\n        }\n        return null;\n      }\n}\nexport default CookieServise;","import React from 'react';\n\n\nconst imageStyle = {\n    width:'400px',\n   height: '300px'\n}\nconst Image = (props) => {\n    return(\n         <img style={imageStyle}\n            className = \"newsitem1\"\n            src={props.url}\n            alt={props.title} />\n    )\n}\n\n  export default Image;","import React from 'react';\nimport Image from './Image';\nimport './App.css';\n\nconst Articles = (props) => {\n\n\n    return (\n    <div className=\"grid\">\n\n\n        {props.articles.map((article) => (\n            <div className=\"newsflex\" \n                key={article.url}>\n\n                 <Image url={article.urlToImage}\n                        title={article.title} />\n\n                <div className=\"newsitem2\">\n                    \n                    <h3>{article.title}</h3>\n                    <p className=\"date\">\n                    Date: {article.publishedAt.substring(0,10)}</p>\n                    \n                    <p className=\"description\">{article.description}</p>\n\n                    <a href={article.url}>Click to read the article...</a>\n          \n                </div>\n                                \n            </div>\n        ))}\n    </div>)\n}\nexport default Articles;\n","import React from 'react';\nimport './App.css';\n\nclass CurrentYear extends React.Component {\n\trender() {\n\t\treturn <span>{(new Date().getFullYear())}</span>;\n\t}\n}\n\nexport default CurrentYear;","import React from 'react';\nimport './App.css';\nimport CurrentYear from './CurrentYear';\n\nclass Footer extends React.Component {\n    render() {\n      return  (\n      <div>\n  \n        <div className='footer '>\n        \t<p>Â© Marina Smirnova, <CurrentYear/> </p>\t\n        </div>\n  \n      </div>\n      );\n       \n    }\n  }\n  export default Footer;\n","import React from 'react';\nimport './App.css';\nimport logo from './images/globe.jpg';\nimport CookieService from './cookieService';\nimport Articles from './Articles';\nimport Footer from './Footer';\n\nconst API_KEY   = 'e3250e05ddb74da1a085f95cc17c94e9';\nconst BASE_URL  = 'https://newsapi.org/v2/everything?sortBy=publishedAt&apiKey='\n                + API_KEY + \"&q=\";\nconst LAST_QUERY = \"lastQuery\";\nconst cookieService = new CookieService();\n\nclass App extends React.Component { \n    constructor() {\n        super();\n        this.state  = {\n          apiKey : API_KEY,\n          articles : [],\n          newsTopic: 'latest news',\n          loading:false,\n        };\n\n        this.getNews = this.getNews.bind(this);\n        this.handleQuery = this.handleQuery.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //Called when constructor is finished building component.\n    componentDidMount() {\n        // Set main category from cookie if it does not exist.\n        let lastQuery = cookieService.getCookie(LAST_QUERY);\n        if(lastQuery === null) {\n            cookieService.setCookie(LAST_QUERY, this.state.newsTopic);\n            lastQuery = this.state.newsTopic;\n        }\n        this.getNews(lastQuery);\n    }\n\n    handleQuery(e) {\n        this.setState({newsTopic: e.target.value});\n    }\n    handleSubmit(e) {\n      if (this.state.newsTopic !== '') {\n        this.getNews(this.state.newsTopic);\n        cookieService.setCookie(LAST_QUERY, this.state.newsTopic);\n      }\n    }\n\n    getNews(newsTopic) {    \n        const URL = BASE_URL + this.state.newsTopic;\n\n        this.setState({loading: true});\n        // Request and wait for data from remote server.\n        fetch(URL).then(response => response.json())\n            // Data retrieved so parse it.\n            .then((data) => {\n                // console.log(JSON.stringify(data));\n                this.setState({\n                  articles:data.articles,\n                   loading:false\n                  });\n            })\n            // Data is not retieved.\n            .catch((error) => {\n                console.log(error);\n            });         \n    }\n\n    render() {\n        return ( \n        <div>      \n            <div className=\"header\" >\n\t\t\t\t<hr width=\"30%\"></hr>\n\t\t\t\t<img src={logo} alt=\"logo\"/>\n\t\t\t\t<h1>News database</h1>\n\t\t\t\t<h3>What are you looking for?</h3>\n\t\t\t\t<form className=\"example\">\n\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\tclassName=\"searchInput\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tplaceholder=\"search...\"\n\t\t\t\t\t\tvalue={this.state.newsTopic}\n\t\t\t\t\t\tonChange={this.handleQuery}/>\n\t\t\t\t<button type=\"button\" onClick={this.handleSubmit}><i className=\"fa fa-search\"></i></button>\n\t\t\t\t</form>\n            </div> \n\n            <div className=\"wrapper\">\n              {!this.state.loading &&\n                <Articles articles={this.state.articles}/>\n              }\n              {this.state.loading &&\n                <div className=\"loading wrapper\">\n                 <p>Loading...</p>\n                 <p>Please wait!</p>\n                </div>\n              }\n            </div>\n              <Footer/>\n        </div>     \n        )\n    }\n}\nexport default App;\n","import React from 'react';\nimport './App.css'\n\nclass About extends React.Component {\n    render() {\n      return  (\n      <div>\n  \n        <div className='about wrapper'>\n       \t\t<p>Credits to the newsapi.org</p> \n\t\t\t<p>For educational purposes only.</p>\n\t\t\t\n        </div>\n        \n      </div>\n      );\n       \n    }\n  }\n  export default About;","import React from 'react';\n\nconst NotFound = () => (\n<h1>This page cannot be found.</h1>\n);\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } \n                    from \"react-router-dom\";\nimport './App.css';\nimport Home from './Home';\nimport About from './About';\nimport NotFound from './NotFound';\n\nclass App extends Component {\n  render() {\n    return  (\n      <Router>\n        <div>\n          <div className=\"header\">\n            <ul>\n              <li><Link to=\"/newsDatabase/\">Home</Link></li>\n              <li><Link to=\"/newsDatabase/about\">About</Link></li>\n            </ul>\n          </div>\n\n          <Switch>\n            <Route exact path=\"/newsDatabase/\" component={Home} />\n            <Route path={'/newsDatabase/about'} exact component={About} />\n            \n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n      </div>\n    </Router>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}